# -*- coding: utf-8 -*-
"""MachineLearningProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13Xum8A7tG0dwgGo075OUd9ssENFO2KkY
"""

from numpy.lib.function_base import percentile
import streamlit as st
import pandas as pd    #Â To work with tables

data = pd.read_csv("https://gist.githubusercontent.com/cdespiney/7a5f499da223d34755e82256e5805161/raw/1e30f972507f543adcc2f5683fed80ac86f1ff4b/heart.csv")

data.columns = ["Age", "Sex", "Chest Pain", "Resting Blood Pressure", "Cholesterol", "Fasting blood sugar", "Resting ECG results", "Max heart rate", "Exang", "Myocardiac indicator", "Myocardiac indicator 2", "Fluoroscopy", "Thalassemia", "target"]
data.head(5)

healthy = data[data['target'] == 0]
healthy.head()

sick = data[data['target'] == 1]
sick.head()

from sklearn.linear_model import LinearRegression

predictor = ['Cholesterol']
X = data[predictor]
Y = data['target']

lm = LinearRegression()
model_cholesterol = lm.fit(X,Y)

print(f'alpha = {model_cholesterol.intercept_}')
print(f'betas = {model_cholesterol.coef_}')

new_X = [[350]]
print(model_cholesterol.predict(new_X))

from sklearn.model_selection import train_test_split

# Divide the data 80-20 into a training and test set
train_set, test_set = train_test_split(data, test_size=0.2)

predictor = ['Cholesterol']
X = train_set[predictor]
Y = train_set['target']

lm = LinearRegression()
model_All = lm.fit(X, Y)

test_set['predictions'] = model_All.predict(test_set[predictor])

predictors = ['Cholesterol', 'Max heart rate', 'Myocardiac indicator']
X = train_set[predictors]
Y = train_set.target

from sklearn.linear_model import LinearRegression

lm = LinearRegression()
lm.fit(X, Y)
print(lm.intercept_)
print(lm.coef_)

print(list(zip(predictors, lm.coef_)))


st.title('Machine Learning - Heart Disease Prediction')

cholesterol = st.slider('Cholesterol', 100, 400, 250)
max_heart_rate = st.slider('Max Heart Rate', 50, 300, 140)
myocardiac = st.slider('Myocardiac indicator', 0.00, 4.00, 2.00)

new_X = [[cholesterol, max_heart_rate, myocardiac]]
prediction = lm.predict(new_X)
if prediction >= 1:
    st.write('High chance of heart disease', prediction)
else:
    st.write('Low chance of heart disease', prediction)